import { NextRequest, NextResponse } from 'next/server'; import { getAdminClient,isAllowed } from '@/lib/supabaseAdmin'; export async function GET(){ const s=getAdminClient(); if(!s) return NextResponse.json({links:[]}); const {data,error}=await s.from('portfolio').select('*').order('created_at',{ascending:false}); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({links:data}); } export async function POST(req:NextRequest){ const code=req.headers.get('x-admin-code'); if(!isAllowed(code)) return NextResponse.json({error:'Unauthorized'},{status:401}); const s=getAdminClient(); if(!s) return NextResponse.json({error:'Server not configured'},{status:500}); const body=await req.json(); const {data,error}=await s.from('portfolio').insert(body).select().single(); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({link:data}); } export async function DELETE(req:NextRequest){ const code=req.headers.get('x-admin-code'); if(!isAllowed(code)) return NextResponse.json({error:'Unauthorized'},{status:401}); const {searchParams}=new URL(req.url); const id=searchParams.get('id'); const s=getAdminClient(); if(!s) return NextResponse.json({error:'Server not configured'},{status:500}); const {error}=await s.from('portfolio').delete().eq('id',id); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({ok:true}); }